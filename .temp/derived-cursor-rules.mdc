---
description: Cursor rules derived by SpecStory from the project AI interaction history
globs: *
---

## PROJECT OVERVIEW
This project is a lesson manager.  Further details to be added.

## CODE STYLE
Consistent indentation and spacing will be enforced.  Further style guidelines to be added.

## FOLDER ORGANIZATION
To be defined based on project evolution.

## TECH STACK
Git (version control).  Further details to be added as the project evolves.

## PROJECT-SPECIFIC STANDARDS
All branches should be regularly updated via `git pull`. If a branch is not up-to-date, you must pull changes from the origin before making further modifications.  Use `git fetch --all` to update all remote branches.  When working with a specific remote branch (e.g., `origin/MY_250408`), checkout the branch locally using `git checkout -b <branch_name> origin/<branch_name>`.

## WORKFLOW & RELEASE RULES
Before merging any branch, ensure it is up-to-date with the main branch using `git pull origin main`.  Further workflow rules will be added.

## REFERENCE EXAMPLES
Git commands for branch management are included in the 2025-04-11 interaction log.

## PROJECT DOCUMENTATION & CONTEXT SYSTEM
To be defined.

## DEBUGGING
Further debugging guidelines to be added.

## FINAL DOs AND DON'Ts
- **DO** regularly update your local branches with `git pull`.
- **DO** use `git fetch --all` to update all remote branches before starting work.
- **DO** checkout remote branches using `git checkout -b <local_branch_name> origin/<remote_branch_name>`.
- **DO NOT** merge branches without ensuring they are up-to-date.