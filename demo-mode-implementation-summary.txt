# デモモード実装状況まとめ

## 1. 認証ストアの拡張
- `useAuthStore`に`isDemo`フラグが追加済み
- `enterDemoMode`および`exitDemoMode`関数が実装済み
- デモユーザーは匿名ユーザーとして実装されている（uid: `demo-${Date.now()}`, email: 'demo@example.com'）

## 2. モード選択画面
- `mode-selection.tsx`で実装済み
- オンボーディング完了後に表示される
- 「アカウント作成せず利用」と「アカウント作成」の2つの選択肢を提供

## 3. デモデータの実装
- `store/demoData.ts`でサンプルデータが定義済み
  - レッスン（3件）
  - 練習メニュー（3件）
  - チャットルーム・メッセージ

## 4. データ保存・取得処理
- `services/demoModeService.ts`でデモモード用のサービスが実装済み
- ローカルストレージまたはAsyncStorageを使用してデータを管理
- Webとモバイル両方のプラットフォームに対応

## 5. デモモード表示・制限
- 全画面の下部に「デモモード」インジケーターが表示される
- インジケーターにはアカウント作成ボタンも含まれる
- タブバーの実装は完了しており、全てのタブが利用可能

## 6. 機能制限の実装
- チャット機能は完全に利用可能
- レッスンとタスク画面ではサンプルデータのみを表示
- 各画面で適切なデモモード用のデータロード処理が実装されている

## 7. アカウント作成への導線
- トップバーのデモモードインジケーターから遷移可能
- 設定画面からもアカウント作成・デモモード終了が可能

## 8. デモモード終了処理
- `exitDemoMode`関数により、データの削除とログイン画面への遷移を実装
- ローカルストレージのクリーンアップも実装済み 